# This is a basic workflow to help you get started with Actions

name: Deploy Terraform-Oci

on:
  workflow_dispatch:


jobs:

  build:    
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      
      - name:  Upload Artifact 
        uses: actions/upload-artifact@v1 
        with: 
          name: terraform 
          path: ${{ github.workspace }}

  deploy-dev-infra: 
    name: Deploy Infra Dev
    runs-on: ubuntu-latest

    defaults: 
      run: 
        working-directory:    ${{ github.workspace }}

    env:
      ARM_CLIENT_ID:          ${{ secrets.TF_ARM_CLIENT_ID  }}
      ARM_SUBSCRIPTION_ID:    ${{ secrets.TF_ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID:          ${{ secrets.TF_ARM_TENANT_ID }}
      ARM_CLIENT_SECRET:      ${{ secrets.TF_ARM_CLIENT_SECRET }}
      
      TF_VAR_user_ocid:                      ${{ secrets.TF_VAR_USER_OCID }}
      TF_VAR_fingerprint:                    ${{ secrets.TF_VAR_FINGERPRINT }}
      TF_VAR_tenancy_ocid:                   ${{ secrets.TF_VAR_TENANCY_OCID }}
      TF_VAR_compartment_ocid_projetofinal:  ${{ secrets.TF_VAR_COMPARTMENT_OCID_PROJETOFINAL }}
      TF_VAR_region:                         ${{ secrets.TF_VAR_REGION }}
      TF_VAR_private_key_path:               ${{ secrets.TF_VAR_PRIVATE_KEY_PATH }}      
      TF_VAR_public_key_path:                ${{ secrets.TF_VAR_PUBLIC_KEY_PATH }}
      TF_VAR_atp_password:                   ${{ secrets.TF_VAR_ATP_PASSWORD }}


    
    environment:
      name: dev 

    needs: build 
    steps:
      - name: Download Terraform 
        uses: actions/download-artifact@v2
        with: 
          name: terraform
          path: ${{ github.workspace }}

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

   
      - name: Terraform Init
        id: init
        run: terraform init


      - name: Terraform Plan
        id: plan
        run: terraform plan  
        continue-on-error: true

      - name: Terraform Apply
        id: apply
        run: terraform apply  -auto-approve

      - name:  RotinaScript
        run: | 
          rm -rf app_projetorh/wallet/*
          unzip -d app_projetorh/wallet/ wallet_tcb/wallet.zip
          ls -la  app_projetorh/wallet/ 
          docker --version

  





